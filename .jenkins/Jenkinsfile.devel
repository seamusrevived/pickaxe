pipeline {
    agent any

    stages {
        stage('Test client') {
            steps {
                dir('client') {
                    sh 'gradle build'
                    sh 'gradle test'
                }
            }
        }
        stage('Test server and e2e') {
            steps {
                lock('pickaxe-pipeline') {
                    dir('server') {
                        sh 'gradle build'
                        sh 'gradle copy_dependencies'
                    }
                    sh 'docker build . -f e2e/Dockerfile -t pickaxe:pipeline'
                    sh 'docker-compose -p pickaxe_pipeline up --build -d'
                    sleep(5)
                    sh 'docker run -d -p 8080:8080 --net=pickaxe_pipeline_default --name pickaxe_pipeline_1 pickaxe:pipeline'
                    sleep(5)
                    dir('e2e') {
                        sh 'yarn install'
                        sh 'yarn run cypress run'
                    }
                    cleanupDocker()
                }
            }
        }
    }

    post {
        failure {
            cleanupDocker()
        }
    }
}

def cleanupDocker() {
    sh('docker stop pickaxe_pipeline_1')
    sh('docker rm pickaxe_pipeline_1')
    sh('docker image rm pickaxe:pipeline')
    sh('docker-compose -p pickaxe_pipeline down')
    sleep(5)
    sh('docker image rm pickaxe_pipeline_postgres')
    sh('docker volume rm pickaxe_pipeline_postgres-pipeline-data')
}
